dat1 <- data.table(y = rnorm(10), X = cbind(1, matrix(rnorm(30, 10, 3))))
dat1
dat1 <- data.table(y = rnorm(10), X = cbind(1, matrix(rnorm(30), 10, 3)))
dat1
mf1 <- as.data.table(model.frame(y ~ X.V1 + X.V2 + X.V3 + X.V4, dat1))
mf1
str(mf1)
formals(model.frame)
formals(model.frame.default)
formals(model.frame.lm)
fun1 <- function(formula, data) {
cl <- match.call()
mf <- match.call(expand.dots = FALSE)
m <- match(c("formula", "data", "subset", "na.action"), names(cl), 0L)
mf <- mf[c(1L, m)]
mf[[1L]] <- as.name("model.frame")
as.data.table(eval(mf, parent.frame()))
}
debug(fun1)
fun1(y ~ X.V1, dat1)
str(cl)
class(cl)
str(as.list(cl))
str(as.list(mf))
m
mf
str(as.list(mf))
mf
str(as.list(mf))
fun1(y ~ X.V1 * X.V2, dat1)
dat1
tt <- dat1
tt <- fun1(y ~ X.V1 * X.V2, dat1)
tt
str(tt)
attr(tt, "terms")
?model.matrix
?formula
dat1
dat2 <- data.table(id = rep(1:3, each = 6), y = rnorm(18), X = cbind(1, matrix(rnorm(36), 18, 2)))
dat2
tt2 <- fun1(y ~ X1.V1 + X2.V2)
tt2 <- fun1(y ~ X1.V1 + X2.V2, data = dat2)
dat2
tt2 <- fun1(y ~ X.V1 + X.V2, data = dat2)
str(tt2)
tt2 <- fun1(y ~ X.V1 + X.V2 | id, data = dat2)
str(tt2)
attr(tt2, "terms")
names(tt2)
str(tt2)
tt2
dat2 <- data.table(id = factor(rep(1:3, each = 6)), y = rnorm(18), X = cbind(1, matrix(rnorm(36), 18, 2)))
tt2 <- fun1(y ~ X.V1 + X.V2 | id, data = dat2)
tt2 <- fun1(y ~ X.V1 | id, data = dat2)
undebug(fun1)
tt2 <- fun1(y ~ X.V1 | id, data = dat2)
tt2 <- fun1(y ~ X.V1 / id, data = dat2)
str(tt2)
tt2
tt2 <- fun1(y ~ (X.V1 + X2.V2) / id, data = dat2)
tt2 <- fun1(y ~ (X.V1 + X.V2) / id, data = dat2)
str(tt2)
tt2
attributes(tt2)
attr(tt2, "variables")
attr(tt2, "terms")
attr(attr(tt2, "terms"), "variables")
attr(attr(tt2, "terms"), "factors")
fun1
model.matrix(attr(tt2, "terms"), data = tt2)
tt2 <- fun1(y ~ X.V1 / id, data = dat2)
model.matrix(attr(tt2, "terms"), tt2)
C
?C
dat2 <- data.table(id = factor(rep(1:3, each = 6)), y = rnorm(18), X = matrix(rnorm(36), 18, 2))
tt2 <- fun1(y ~ X.V1 / id, data = dat2)
model.matrix(attr(tt2, "terms"), tt2)
?lm
attr(tt2, "terms")
delete.response(attr(tt2, "terms"))
tt3 <- delete.response(attr(tt2, "terms"))
tt2
attributes(attr(tt2, "terms"))
attributes(tt3)
tt4 <- fun1(y ~ , data = dat2)
tt4 <- fun1( ~ X.V1, data = dat2)
tt4
tt4 <- fun1(y ~ 0, data = dat2)
tt4
?is.empty.model
setwd("~/code/NewProductForecasting/newprodforecast")
dev_mode()
load_all()
document()
dev_help("tm.control")
dev_help("sf.control")
dev_help("sf.control")
?dev_help
getOption("help_type")
dev_mode()
q()
